{% extends 'SonataAdminBundle:Form:form_admin_fields.html.twig' %}

{% block form_widget_simple %}
    {{ parent() }}
    {% if form.vars.name == 'email' %}
        {% include('LibrinfoCRMBundle:Form:email.html.twig') %}
    {% elseif form.vars.name == 'vat' %}
        {% include('LibrinfoCRMBundle:Form:vat.html.twig') %}
    {% endif %}
{% endblock form_widget_simple %}

{% block librinfo_zip_city_widget %}
    {%- set allowClearPlaceholder = required ? '' : ' ' -%}

    {%- set ajaxData = {
        'searchParamName': req_param_name_search,
        'itemsParamName': req_param_name_items_per_page,
        'pageParamName': req_param_name_page_number,
        'itemsPerPage': items_per_page
    } -%}
    
    {%- set ajaxOptionalData = {} -%}
    
    {% if sonata_admin.admin is not null %}
        {% set ajaxOptionalData = ajaxOptionalData|merge({
            'uniqid': sonata_admin.admin.uniqid,
            'admin_code': sonata_admin.admin.code
        }) %}
    {% elseif admin_code %}
        {% set ajaxOptionalData = ajaxOptionalData|merge({
            'admin_code':  admin_code,
        }) %}
    {% endif %}

    {% if app.request.query.get('subclass') %}
        {% set ajaxOptionalData = ajaxOptionalData|merge({
            'subclass': app.request.query.get('subclass'),
        }) %}
    {% endif %}
    
    {% if context == 'filter' %}
        {% set ajaxOptionalData = ajaxOptionalData|merge({
            'field':  full_name|replace({'filter[': '', '][value]': '', '__':'.'}),
            '_context': 'filter'
        }) %}
    {% else %}
        {% set ajaxOptionalData = ajaxOptionalData|merge({
            'field': name != 'zip' and name != 'city'? 'zip': name
        }) %}
    {% endif %}

    {% if req_params is not empty %},
        {%- for key, value in req_params -%}
            {% set key = key|e('html') %}
            {% set value = value|e('html') %}
            {% set ajaxOptionalData = ajaxOptionalData|merge({
                key: value
            }) %}    
        {%- endfor -%}
    {% endif %}
    
    {% set ajaxData = ajaxData|merge({
        'optional': ajaxOptionalData
    }) %}
   
    {% spaceless %}
        <div id="{{ id }}_hidden_inputs_wrap">
            <input type="hidden" name="{{ full_name }}" {%- if disabled %} disabled="disabled"{% endif %} value="{{ value }}">
        </div>

        <input 
            type="text" 
            id="{{ id }}_autocomplete_input" 
            class="zipcity-autocomplete"
            value="{{ value }}"
            {%- if read_only is defined and read_only %} readonly="readonly"{% endif -%}
            {%- if disabled %} disabled="disabled"{% endif -%}
            {%- if required %} required="required"{% endif %}
            data-config='{{ {
                'id': id,
                'name': name != 'zip' and name != 'city'? 'zip': name,
                'value': value,
                'formId': form.parent.vars.id,
                'dropdownItemClass': dropdown_item_css_class,
                'zipField': zip_field,
                'cityField': city_field,
                'linked': linked,
                'options': {
                    'placeholder': placeholder ?: allowClearPlaceholder,
                    'allowClear': required ? false : true,
                    'enable': disabled ? false : true,
                    'readonly': read_only is defined and read_only or attr.readonly is defined and attr.readonly ? 'true' : 'false',
                    'minimumInputLength': minimum_input_length,
                    'multiple': false,
                    'width': width,
                    'dropdownAutoWidth': dropdown_auto_width ? true : false,
                    'containerCssClass': container_css_class ~ ' form-control',
                    'dropdownCssClass': dropdown_css_class,
                },
                'ajax': {
                    'url':  url ?: path(route.name, route.parameters|default([])),
                    'quietMillis': quiet_millis,
                    'cache': cache ? 'true' : 'false',
                    'data': ajaxData
                }
            }|json_encode()|raw }}'
        />
    {% endspaceless %}
{% endblock librinfo_zip_city_widget %}


