<?php

/*
 * This file is part of the Blast Project package.
 *
 * Copyright (C) 2015-2017 Libre Informatique
 *
 * This file is licenced under the GNU LGPL v3.
 * For the full copyright and license information, please view the LICENSE.md
 * file that was distributed with this source code.
 */

namespace Librinfo\CRMBundle\Entity\Test\Unit;

/*
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-04 at 15:12:44.
 */

use PHPUnit\Framework\TestCase;
use Librinfo\CRMBundle\Entity\Organism;
use Doctrine\Common\Collections\ArrayCollection;

class OrganismTest extends TestCase
{
    /**
     * @var Organism
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Organism();
    /*
    * @todo: uncomment this line
    * $this->object = new Organism;
    */
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::initOrganism
     *
     * @todo   Implement testInitOrganism().
     */
    public function testInitOrganism()
    {
        $this->object->InitOrganism();
        $test = $this->object->getActive();
        $this->assertTrue($test);
        $this->assertInstanceOf(ArrayCollection::class, $this->object->getCircles());
        $this->assertInstanceOf(ArrayCollection::class, $this->object->getPositions());
        $this->assertInstanceOf(ArrayCollection::class, $this->object->getPhones());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::__clone
     *
     * @todo   Implement test__clone().
     */
    public function test__clone()
    {
        // init
       $id = 'id';
        $this->object->setId($id);
       // test methods
       $clone = clone $this->object;
        $this->assertNull($clone->getId());
        $this->assertInstanceOf(ArrayCollection::class, $clone->getPositions());
       //test object
       $this->assertEquals($id, $this->object->getId());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::__toString
     *
     * @todo   Implement test__toString().
     */
    public function test__toString()
    {
        $firstname = 'firstname';
        $name = 'name';
        $this->object->setFirstname($firstname);
        $this->object->setName($name);
        $this->object->getFirstname();
        $this->object->getName();
        $this->assertEquals('Firstname NAME', $this->object->__toString());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setFirstname
     * @covers \Librinfo\CRMBundle\Entity\Organism::getFirstname
     *
     * @todo   Implement testSetFirstname().
     */
    public function testSetFirstname()
    {
        $firstname = 'firstname';
        $this->object->setFirstname($firstname);
        $this->assertEquals('Firstname', $this->object->getFirstname());

        $firstname = 'FIRSTNAME';
        $this->object->setFirstname($firstname);
        $this->assertEquals('Firstname', $this->object->getFirstname());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getLastname
     *
     * @todo   Implement testGetLastname().
     */
    public function testGetLastname()
    {
        $lastname = 'lastname';
        $this->object->setLastname($lastname);
        $this->assertEquals('LASTNAME', $this->object->getLastname());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setShortname
     * @covers \Librinfo\CRMBundle\Entity\Organism::getShortname
     *
     * @todo   Implement testSetShortname().
     */
    public function testSetShortname()
    {
        $shortname = 'shortname';
        $this->object->setShortname($shortname);
        $this->assertEquals('shortname', $this->object->getShortname());

        $shortname = 'SHORTname';
        $this->object->setShortname('SHORTname');
        $this->assertContains('SHORTname', $this->object->getShortname());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setTitle
     * @covers \Librinfo\CRMBundle\Entity\Organism::getTitle
     *
     * @todo   Implement testSetTitle().
     */
    public function testSetTitle()
    {
        $title = 'Ambassadeurs';
        $this->object->setTitle($title);
        $this->assertContains('Ambassadeurs', $this->object->getTitle());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setFlashOnControl
     *
     * @todo   Implement testSetFlashOnControl().
     */
    public function testSetFlashOnControl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getFlashOnControl
     *
     * @todo   Implement testGetFlashOnControl().
     */
    public function testGetFlashOnControl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setFamilyContact
     *
     * @todo   Implement testSetFamilyContact().
     */
    public function testSetFamilyContact()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getFamilyContact
     *
     * @todo   Implement testGetFamilyContact().
     */
    public function testGetFamilyContact()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCulture
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCulture
     *
     * @todo   Implement testSetCulture().
     */
    public function testSetCulture()
    {
        $culture = 'culture';
        $this->object->setCulture($culture);
        $this->assertSame('culture', $this->object->getCulture());
        $this->assertInternalType('string', $this->object->getCulture());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setUrl
     *
     * @todo   Implement testSetUrl().
     */
    public function testSetUrl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getUrl
     *
     * @todo   Implement testGetUrl().
     */
    public function testGetUrl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getName
     * @covers \Librinfo\CRMBundle\Entity\Organism::setName
     *
     * @todo   Implement testGetName().
     */
    public function testGetName()
    {
        $name = 'name';
        $this->object->setName($name);
        $this->assertEquals('NAME', $this->object->getName());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setAdministrativeNumber
     *
     * @todo   Implement testSetAdministrativeNumber().
     */
    public function testSetAdministrativeNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getAdministrativeNumber
     *
     * @todo   Implement testGetAdministrativeNumber().
     */
    public function testGetAdministrativeNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCategory
     *
     * @todo   Implement testSetCategory().
     */
    public function testSetCategory()
    {
        $this->assertNull($this->object->getCategory());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCategory
     *
     * @todo   Implement testGetCategory().
     */
    public function testGetCategory()
    {
        $this->assertNull($this->object->getCategory());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setIsIndividual
     * @covers \Librinfo\CRMBundle\Entity\Organism::getIsIndividual
     * @covers \Librinfo\CRMBundle\Entity\Organism::isIndividual
     *
     * @todo   Implement testSetIsIndividual().
     */
    public function testSetIsIndividual()
    {
        $this->assertEquals(false, $this->object->getIsIndividual());
        $this->assertInternalType('bool', $this->object->isIndividual());
        $this->assertFalse($this->object->isIndividual());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setIsCustomer
     * @covers \Librinfo\CRMBundle\Entity\Organism::getIsCustomer
     *
     * @todo   Implement testSetIsCustomer().
     */
    public function testSetIsCustomer()
    {
        $this->assertFalse($this->object->getIsCustomer());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCustomerCode
     *
     * @todo   Implement testSetCustomerCode().
     */
    public function testSetCustomerCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCustomerCode
     *
     * @todo   Implement testGetCustomerCode().
     */
    public function testGetCustomerCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setIsSupplier
     * @covers \Librinfo\CRMBundle\Entity\Organism::getIsSupplier
     * @covers \Librinfo\CRMBundle\Entity\Organism::isSupplier
     *
     * @todo   Implement testSetIsSupplier().
     */
    public function testSetIsSupplier()
    {
        $this->assertFalse($this->object->getIsSupplier());
        $this->assertInternalType('bool', $this->object->isSupplier());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setSupplierCode
     *
     * @todo   Implement testSetSupplierCode().
     */
    public function testSetSupplierCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getSupplierCode
     *
     * @todo   Implement testGetSupplierCode().
     */
    public function testGetSupplierCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setIban
     *
     * @todo   Implement testSetIban().
     */
    public function testSetIban()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getIban
     *
     * @todo   Implement testGetIban().
     */
    public function testGetIban()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setVat
     *
     * @todo   Implement testSetVat().
     */
    public function testSetVat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getVat
     *
     * @todo   Implement testGetVat().
     */
    public function testGetVat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setVatVerified
     * @covers \Librinfo\CRMBundle\Entity\Organism::getVatVerified
     *
     * @todo   Implement testSetVatVerified().
     */
    public function testSetVatVerified()
    {
        $this->assertEquals(0, $this->object->getVatVerified());
        $this->assertInternalType('int', $this->object->getVatVerified());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setAlert
     *
     * @todo   Implement testSetAlert().
     */
    public function testSetAlert()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getAlert
     *
     * @todo   Implement testGetAlert().
     */
    public function testGetAlert()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setActive
     *
     * @todo   Implement testSetActive().
     */
    public function testSetActive()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getActive
     *
     * @todo   Implement testGetActive().
     */
    public function testGetActive()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCatalogueSent
     *
     * @todo   Implement testSetCatalogueSent().
     */
    public function testSetCatalogueSent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCatalogueSent
     *
     * @todo   Implement testGetCatalogueSent().
     */
    public function testGetCatalogueSent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCatalogueSendMean
     *
     * @todo   Implement testSetCatalogueSendMean().
     */
    public function testSetCatalogueSendMean()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCatalogueSendMean
     *
     * @todo   Implement testGetCatalogueSendMean().
     */
    public function testGetCatalogueSendMean()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setLastCatalogueSentDate
     *
     * @todo   Implement testSetLastCatalogueSentDate().
     */
    public function testSetLastCatalogueSentDate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getLastCatalogueSentDate
     *
     * @todo   Implement testGetLastCatalogueSentDate().
     */
    public function testGetLastCatalogueSentDate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setFirstCatalogueSentDate
     *
     * @todo   Implement testSetFirstCatalogueSentDate().
     */
    public function testSetFirstCatalogueSentDate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getFirstCatalogueSentDate
     *
     * @todo   Implement testGetFirstCatalogueSentDate().
     */
    public function testGetFirstCatalogueSentDate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setSource
     *
     * @todo   Implement testSetSource().
     */
    public function testSetSource()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getSource
     *
     * @todo   Implement testGetSource().
     */
    public function testGetSource()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getDefaultPhone
     *
     * @todo   Implement testGetDefaultPhone().
     */
    public function testGetDefaultPhone()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setDefaultPhone
     *
     * @todo   Implement testSetDefaultPhone().
     */
    public function testSetDefaultPhone()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addPhone
     *
     * @todo   Implement testAddPhone().
     */
    public function testAddPhone()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removePhone
     *
     * @todo   Implement testRemovePhone().
     */
    public function testRemovePhone()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::hasPhone
     *
     * @todo   Implement testHasPhone().
     */
    public function testHasPhone()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getPhones
     *
     * @todo   Implement testGetPhones().
     */
    public function testGetPhones()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addIndividual
     *
     * @todo   Implement testAddIndividual().
     */
    public function testAddIndividual()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removeIndividual
     *
     * @todo   Implement testRemoveIndividual().
     */
    public function testRemoveIndividual()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getIndividuals
     *
     * @todo   Implement testGetIndividuals().
     */
    public function testGetIndividuals()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addOrganization
     *
     * @todo   Implement testAddOrganization().
     */
    public function testAddOrganization()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removeOrganization
     *
     * @todo   Implement testRemoveOrganization().
     */
    public function testRemoveOrganization()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getOrganizations
     *
     * @todo   Implement testGetOrganizations().
     */
    public function testGetOrganizations()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isPersonal
     *
     * @todo   Implement testIsPersonal().
     */
    public function testIsPersonal()
    {
        $this->assertFalse($this->object->isPersonal());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getFulltextName
     *
     * @todo   Implement testGetFulltextName().
     */
    public function testGetFulltextName()
    {
        // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
          'This test has not been implemented yet.'
      );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getId
     * @covers \Librinfo\CRMBundle\Entity\Organism::setId
     *
     * @todo   Implement testGetId().
     */
    public function testGetId()
    {
        $id = 'id';
        $this->object->setId($id);
        $test = $this->object->getId();
        $this->assertEquals('id', $test);
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isNew
     *
     * @todo   Implement testIsNew().
     */
    public function testIsNew()
    {
        $id = 'id';
        $this->object->setId($id);
        $this->object->getId();
        $this->assertFalse($this->object->IsNew());
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCreatedAt
     *
     * @todo   Implement testGetCreatedAt().
     */
    public function testGetCreatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCreatedAt
     *
     * @todo   Implement testSetCreatedAt().
     */
    public function testSetCreatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getUpdatedAt
     *
     * @todo   Implement testGetUpdatedAt().
     */
    public function testGetUpdatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setUpdatedAt
     *
     * @todo   Implement testSetUpdatedAt().
     */
    public function testSetUpdatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getEmail
     *
     * @todo   Implement testGetEmail().
     */
    public function testGetEmail()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setEmail
     *
     * @todo   Implement testSetEmail().
     */
    public function testSetEmail()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isEmailNpai
     *
     * @todo   Implement testIsEmailNpai().
     */
    public function testIsEmailNpai()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setEmailNpai
     *
     * @todo   Implement testSetEmailNpai().
     */
    public function testSetEmailNpai()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isEmailNoNewsletter
     *
     * @todo   Implement testIsEmailNoNewsletter().
     */
    public function testIsEmailNoNewsletter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setEmailNoNewsletter
     *
     * @todo   Implement testSetEmailNoNewsletter().
     */
    public function testSetEmailNoNewsletter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addPosition
     *
     * @todo   Implement testAddPosition().
     */
    public function testAddPosition()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removePosition
     *
     * @todo   Implement testRemovePosition().
     */
    public function testRemovePosition()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getPositions
     *
     * @todo   Implement testGetPositions().
     */
    public function testGetPositions()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addCircle
     *
     * @todo   Implement testAddCircle().
     */
    public function testAddCircle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removeCircle
     *
     * @todo   Implement testRemoveCircle().
     */
    public function testRemoveCircle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCircles
     *
     * @todo   Implement testGetCircles().
     */
    public function testGetCircles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setDescription
     *
     * @todo   Implement testSetDescription().
     */
    public function testSetDescription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getDescription
     *
     * @todo   Implement testGetDescription().
     */
    public function testGetDescription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addSearchIndex
     *
     * @todo   Implement testAddSearchIndex().
     */
    public function testAddSearchIndex()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removeSearchIndex
     *
     * @todo   Implement testRemoveSearchIndex().
     */
    public function testRemoveSearchIndex()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getSearchIndexes
     *
     * @todo   Implement testGetSearchIndexes().
     */
    public function testGetSearchIndexes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setSearchIndexes
     *
     * @todo   Implement testSetSearchIndexes().
     */
    public function testSetSearchIndexes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::analyseField
     *
     * @todo   Implement testAnalyseField().
     */
    public function testAnalyseField()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getUsername
     *
     * @todo   Implement testGetUsername().
     */
    public function testGetUsername()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setUsername
     *
     * @todo   Implement testSetUsername().
     */
    public function testSetUsername()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getUsernameCanonical
     *
     * @todo   Implement testGetUsernameCanonical().
     */
    public function testGetUsernameCanonical()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setUsernameCanonical
     *
     * @todo   Implement testSetUsernameCanonical().
     */
    public function testSetUsernameCanonical()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getSalt
     *
     * @todo   Implement testGetSalt().
     */
    public function testGetSalt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getPlainPassword
     *
     * @todo   Implement testGetPlainPassword().
     */
    public function testGetPlainPassword()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setPlainPassword
     *
     * @todo   Implement testSetPlainPassword().
     */
    public function testSetPlainPassword()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getPassword
     *
     * @todo   Implement testGetPassword().
     */
    public function testGetPassword()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setPassword
     *
     * @todo   Implement testSetPassword().
     */
    public function testSetPassword()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getExpiresAt
     *
     * @todo   Implement testGetExpiresAt().
     */
    public function testGetExpiresAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setExpiresAt
     *
     * @todo   Implement testSetExpiresAt().
     */
    public function testSetExpiresAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCredentialsExpireAt
     *
     * @todo   Implement testGetCredentialsExpireAt().
     */
    public function testGetCredentialsExpireAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCredentialsExpireAt
     *
     * @todo   Implement testSetCredentialsExpireAt().
     */
    public function testSetCredentialsExpireAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getLastLogin
     *
     * @todo   Implement testGetLastLogin().
     */
    public function testGetLastLogin()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setLastLogin
     *
     * @todo   Implement testSetLastLogin().
     */
    public function testSetLastLogin()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getEmailVerificationToken
     *
     * @todo   Implement testGetEmailVerificationToken().
     */
    public function testGetEmailVerificationToken()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setEmailVerificationToken
     *
     * @todo   Implement testSetEmailVerificationToken().
     */
    public function testSetEmailVerificationToken()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getPasswordResetToken
     *
     * @todo   Implement testGetPasswordResetToken().
     */
    public function testGetPasswordResetToken()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setPasswordResetToken
     *
     * @todo   Implement testSetPasswordResetToken().
     */
    public function testSetPasswordResetToken()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isCredentialsNonExpired
     *
     * @todo   Implement testIsCredentialsNonExpired().
     */
    public function testIsCredentialsNonExpired()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isAccountNonExpired
     *
     * @todo   Implement testIsAccountNonExpired().
     */
    public function testIsAccountNonExpired()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setLocked
     *
     * @todo   Implement testSetLocked().
     */
    public function testSetLocked()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isAccountNonLocked
     *
     * @todo   Implement testIsAccountNonLocked().
     */
    public function testIsAccountNonLocked()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::hasRole
     *
     * @todo   Implement testHasRole().
     */
    public function testHasRole()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addRole
     *
     * @todo   Implement testAddRole().
     */
    public function testAddRole()
    {
        /*$role = 'role';
      $this->object->addRole($role);
      $test = $this->object->getRoles();
      $this->assertTrue('role'===$test);*/
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
          'This test has not been implemented yet.'
      );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removeRole
     *
     * @todo   Implement testRemoveRole().
     */
    public function testRemoveRole()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getRoles
     *
     * @todo   Implement testGetRoles().
     */
    public function testGetRoles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isPasswordRequestNonExpired
     *
     * @todo   Implement testIsPasswordRequestNonExpired().
     */
    public function testIsPasswordRequestNonExpired()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getPasswordRequestedAt
     *
     * @todo   Implement testGetPasswordRequestedAt().
     */
    public function testGetPasswordRequestedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setPasswordRequestedAt
     *
     * @todo   Implement testSetPasswordRequestedAt().
     */
    public function testSetPasswordRequestedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isVerified
     *
     * @todo   Implement testIsVerified().
     */
    public function testIsVerified()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getVerifiedAt
     *
     * @todo   Implement testGetVerifiedAt().
     */
    public function testGetVerifiedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setVerifiedAt
     *
     * @todo   Implement testSetVerifiedAt().
     */
    public function testSetVerifiedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::eraseCredentials
     *
     * @todo   Implement testEraseCredentials().
     */
    public function testEraseCredentials()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getOAuthAccounts
     *
     * @todo   Implement testGetOAuthAccounts().
     */
    public function testGetOAuthAccounts()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getOAuthAccount
     *
     * @todo   Implement testGetOAuthAccount().
     */
    public function testGetOAuthAccount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addOAuthAccount
     *
     * @todo   Implement testAddOAuthAccount().
     */
    public function testAddOAuthAccount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::serialize
     *
     * @todo   Implement testSerialize().
     */
    public function testSerialize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::unserialize
     *
     * @todo   Implement testUnserialize().
     */
    public function testUnserialize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getCustomer
     *
     * @todo   Implement testGetCustomer().
     */
    public function testGetCustomer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setCustomer
     *
     * @todo   Implement testSetCustomer().
     */
    public function testSetCustomer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getOrders
     *
     * @todo   Implement testGetOrders().
     */
    public function testGetOrders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getUser
     *
     * @todo   Implement testGetUser().
     */
    public function testGetUser()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setUser
     *
     * @todo   Implement testSetUser().
     */
    public function testSetUser()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::hasUser
     *
     * @todo   Implement testHasUser().
     */
    public function testHasUser()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getEmailCanonical
     *
     * @todo   Implement testGetEmailCanonical().
     */
    public function testGetEmailCanonical()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setEmailCanonical
     *
     * @todo   Implement testSetEmailCanonical().
     */
    public function testSetEmailCanonical()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getFullName
     *
     * @todo   Implement testGetFullName().
     */
    public function testGetFullName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getBirthday
     *
     * @todo   Implement testGetBirthday().
     */
    public function testGetBirthday()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setBirthday
     *
     * @todo   Implement testSetBirthday().
     */
    public function testSetBirthday()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getGender
     *
     * @todo   Implement testGetGender().
     */
    public function testGetGender()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setGender
     *
     * @todo   Implement testSetGender().
     */
    public function testSetGender()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isMale
     *
     * @todo   Implement testIsMale().
     */
    public function testIsMale()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isFemale
     *
     * @todo   Implement testIsFemale().
     */
    public function testIsFemale()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getGroup
     *
     * @todo   Implement testGetGroup().
     */
    public function testGetGroup()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setGroup
     *
     * @todo   Implement testSetGroup().
     */
    public function testSetGroup()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getPhoneNumber
     *
     * @todo   Implement testGetPhoneNumber().
     */
    public function testGetPhoneNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setPhoneNumber
     *
     * @todo   Implement testSetPhoneNumber().
     */
    public function testSetPhoneNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::isSubscribedToNewsletter
     *
     * @todo   Implement testIsSubscribedToNewsletter().
     */
    public function testIsSubscribedToNewsletter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setSubscribedToNewsletter
     *
     * @todo   Implement testSetSubscribedToNewsletter().
     */
    public function testSetSubscribedToNewsletter()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::updateName
     *
     * @todo   Implement testUpdateName().
     */
    public function testUpdateName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getDefaultAddress
     *
     * @todo   Implement testGetDefaultAddress().
     */
    public function testGetDefaultAddress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::setDefaultAddress
     *
     * @todo   Implement testSetDefaultAddress().
     */
    public function testSetDefaultAddress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::addAddress
     *
     * @todo   Implement testAddAddress().
     */
    public function testAddAddress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::removeAddress
     *
     * @todo   Implement testRemoveAddress().
     */
    public function testRemoveAddress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::hasAddress
     *
     * @todo   Implement testHasAddress().
     */
    public function testHasAddress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Librinfo\CRMBundle\Entity\Organism::getAddresses
     *
     * @todo   Implement testGetAddresses().
     */
    public function testGetAddresses()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
